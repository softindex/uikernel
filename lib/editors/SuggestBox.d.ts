import React from 'react';
import { StrictOmit } from 'ts-essentials';
import { IListModel, ListModelReadResult } from '../list/types/IListModel';
type Option<TValue> = ListModelReadResult<TValue, Record<string, unknown>>[number];
type ComputedPopupStyles = Partial<{
    bottom: number;
    left: number;
    maxHeight: number;
    minWidth: string;
    top: number;
}>;
type State<TValue> = {
    isOpened: boolean;
    label: string[] | string;
    lastValidLabel: string[] | string;
    loading?: boolean;
    options: Option<Exclude<TValue, null>>[] | [Option<null>, ...Option<Exclude<TValue, null>>[]];
    popupStyles: ComputedPopupStyles;
    selectedOptionKey: number | null;
};
type Props<TValue> = StrictOmit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange' | 'onClick' | 'onFocus' | 'onKeyDown' | 'type' | 'value'> & {
    closeMenuOnSelect: boolean;
    defaultLabel?: string[] | string;
    defaultOpenTop: boolean;
    disabled: boolean;
    label?: string[] | string;
    loadingElement: React.ReactNode;
    model: IListModel<Exclude<TValue, null>, Record<string, unknown>>;
    notFoundElement: React.ReactNode;
    value: TValue | null;
    withEmptyOption: boolean;
    onChange: (value: TValue | null, option: Option<TValue | null>) => void;
    onFocus?: (value: React.FocusEvent<HTMLInputElement>) => void;
    onLabelChange?: (value: string[] | string) => void;
    onMetadataChange?: (value: Option<TValue | null>['metadata']) => void;
};
declare class SuggestBoxEditor<TValue> extends React.Component<Props<TValue>, State<TValue>> {
    static defaultProps: {
        readonly disabled: false;
        readonly notFoundElement: JSX.Element;
        readonly loadingElement: JSX.Element;
        readonly value: null;
        readonly withEmptyOption: false;
        readonly closeMenuOnSelect: true;
        readonly defaultOpenTop: false;
    };
    private mounted;
    private input;
    constructor(props: Props<TValue>);
    componentDidMount(): void;
    componentWillUnmount(): void;
    shouldComponentUpdate(nextProps: Props<TValue>, nextState: State<TValue>): boolean;
    UNSAFE_componentWillReceiveProps(nextProps: Props<TValue>): void;
    focus(): void;
    render(): JSX.Element;
    private setLabelTo;
    private getLabelFromModel;
    private updateList;
    private loadData;
    private openList;
    private onInputFocusAsync;
    private onInputFocus;
    private closeList;
    private toggleListInBackground;
    private selectOption;
    private focusOption;
    private onMouseOverOption;
    private focusOptionAndScrollIntoView;
    private focusNextOption;
    private focusPrevOption;
    private scrollListTo;
    private isParentOf;
    private onDocumentMouseDown;
    private onDocumentMouseScroll;
    private onInputKeyDown;
    private onInputValueChange;
    private getComputedPopupStyles;
}
export default SuggestBoxEditor;
